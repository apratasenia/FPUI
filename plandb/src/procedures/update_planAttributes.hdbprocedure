PROCEDURE "plan_it.plandb.procedures::update_planAttributes" (
in newPlanAttr  "plan_it.plandb::data.PlanAttributes",
IN oldPlanAttr  "plan_it.plandb::data.PlanAttributes",
out tt_errors  "plan_it.plandb::data.procedures.errors"
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
AS
BEGIN
declare lv_ID integer;
declare lv_str_element_new integer;
declare lv_str_element_old integer;
declare lv_resource integer;
declare lv_revenue_rate  integer;
declare lv_travel_variant integer;

select "ID",
       "resource.id" ,
       "str_elemet.id",
       "travel_variant.id",
       "revenue_rate.id" 
       INTO 
       lv_ID,lv_resource,lv_str_element_new,lv_travel_variant,lv_revenue_rate from :newPlanAttr;
       
select "str_elemet.id" into lv_str_element_old from :oldPlanAttr;
if lv_str_element_old <> lv_str_element_new
then 
lv_travel_variant = 0;
end if;

IF lv_id = 0 THEN
 tt_errors = SELECT 500 AS "http_status_code",
                    'Empty Forecast days' AS "error_message",
                    'The Forecast days cannot be empty' AS "detail" FROM "plan_it.plandb.synonyms::DUMMY";
else
update  "plan_it.plandb::data.PlanAttributes" set "resource.id" = lv_resource, "str_elemet.id" = lv_str_element_new,
"travel_variant.id" = lv_travel_variant, "revenue_rate.id" = lv_revenue_rate where "ID" = lv_ID;
end if;
END